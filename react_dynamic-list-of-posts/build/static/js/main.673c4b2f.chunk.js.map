{"version":3,"sources":["components/User.js","api/users.js","components/Comment.js","api/comments.js","components/CommentList.js","components/Post.js","api/posts.js","components/PostList.js","index.js","App.js"],"names":["User","props","react_default","a","createElement","className","name","email","city","street","suite","API_URL","Comment","content","CommentList","_useState","useState","_useState2","Object","slicedToArray","isLoaded","setLoaded","_useState3","_useState4","comments","setComments","useEffect","fetch","then","response","json","data","filter","comment","post","postId","map","key","id","body","style","fontSize","Post","users","setUsers","title","useRef","inputVal","markedTitle","current","textContent","replace","RegExp","concat","innerHTML","markedBody","ref","user","userId","address","PostList","isRequested","setRequested","_useState5","_useState6","posts","setPosts","_useState7","_useState8","filtered","setFiltered","_useState9","_useState10","setInputVal","value","onChange","event","target","includes","type","placeholder","padding","width","onClick","window","location","reload","toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.673c4b2f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function User(props) {\r\n    return (\r\n        <div className=\"user\">\r\n            <em>Name: {props.name}</em>\r\n            <p>Email: {props.email}</p>\r\n            <div className=\"user__address\">\r\n                Address: {props.city}, {props.street}, {props.suite}\r\n            </div>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    street: PropTypes.string.isRequired,\r\n    suite: PropTypes.string.isRequired,\r\n    city: PropTypes.string.isRequired\r\n}","const API_URL = 'https://jsonplaceholder.typicode.com/users'\n\nexport default function getUsers() {\n  return fetch(API_URL).then(response => response.json())\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Comment(props) {\r\n    return (\r\n        <li className=\"comment\">\r\n            <p className=\"comment__content\">{props.content}</p>            \r\n            <p>\r\n                <i>Name: {props.name} </i>\r\n                Email: <u>{props.email}</u>\r\n            </p>\r\n        </li>\r\n    )\r\n}\r\n\r\nComment.propTypes = {\r\n    content: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired\r\n}","const API_URL = 'https://jsonplaceholder.typicode.com/comments'\n\nexport default function getComments() {\n  return fetch(API_URL).then(response => response.json())\n}","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Comment from './Comment'\r\nimport getComments from '../api/comments'\r\n\r\nexport default function CommentList(props) {\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [comments, setComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        getComments().then(data => {\r\n            setLoaded(true)\r\n            setComments(data)\r\n        })\r\n    }, [])\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <div className=\"comments\">\r\n                <h2>\r\n                    <em>Comments: </em>\r\n                </h2>\r\n                <ul className=\"comments-list\">\r\n                    {comments.filter(comment => props.post.postId === comment.postId)\r\n                        .map(comment => (\r\n                            <Comment\r\n                                key={comment.id}\r\n                                content={comment.body}\r\n                                name={comment.name}\r\n                                email={comment.email}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div style={{ fontSize: 20 }}>Loading comments...</div>\r\n    }\r\n}\r\n\r\nCommentList.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport User from './User'\r\nimport getUsers from '../api/users'\r\nimport CommentList from './CommentList'\r\n\r\nexport default function Post(props) {\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n\r\n    const title = useRef()\r\n    const body = useRef()\r\n\r\n    useEffect(() => {\r\n        getUsers().then(data => {\r\n            setLoaded(true)\r\n            setUsers(data)\r\n        })\r\n    }, [])\r\n\r\n    if (props.inputVal) {\r\n        const markedTitle = title.current.textContent\r\n        .replace(new RegExp(props.inputVal, \"gi\"), `<mark>${props.inputVal}</mark>`)\r\n        title.current.innerHTML = markedTitle\r\n\r\n        const markedBody = body.current.textContent\r\n        .replace(new RegExp(props.inputVal, \"gi\"), `<mark>${props.inputVal}</mark>`)\r\n        body.current.innerHTML = markedBody\r\n    }\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <div className=\"post\">\r\n                {/* post */}\r\n                <h2>\r\n                    <em>Post:</em>\r\n                </h2>\r\n                <h2 ref={title}>{props.title}</h2>\r\n                <p ref={body}>{props.body}</p>\r\n                {/* user */}\r\n                {users.filter(user => user.id === props.userId)\r\n                    .map(user => (\r\n                        <User\r\n                            key={user.id}\r\n                            name={user.name}\r\n                            email={user.email}\r\n                            street={user.address.street}\r\n                            suite={user.address.suite}\r\n                            city={user.address.city}\r\n                        />\r\n                    ))\r\n                }\r\n                <CommentList post={props} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>Loading user...</div>\r\n    }\r\n}\r\n\r\nPost.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    userId: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    inputVal: PropTypes.string.isRequired\r\n}","const API_URL = 'https://jsonplaceholder.typicode.com/posts'\n\nexport default function getPosts() {\n  return fetch(API_URL).then(response => response.json())\n}","import React, {useState} from 'react'\r\nimport Post from './Post'\r\nimport getPosts from '../api/posts'\r\n\r\nexport default function PostList() {\r\n    const [isRequested, setRequested] = useState(false)\r\n    const [isLoaded, setLoaded] = useState(false)\r\n    const [posts, setPosts] = useState([])\r\n    const [filtered, setFiltered] = useState([])\r\n    const [inputVal, setInputVal] = useState('')\r\n\r\n    function download() {\r\n        setRequested(true)\r\n\r\n        getPosts().then(data => {\r\n            setLoaded(true)\r\n            setPosts(data)\r\n            setFiltered([...data])\r\n        })\r\n    }\r\n\r\n    function handleFilter(event) {\r\n        const { value } = event.target\r\n        setInputVal(value)\r\n        setFiltered(posts.filter(post => post.title.includes(value) || post.body.includes(value)))\r\n    }\r\n    \r\n    if (!isRequested) {\r\n        return <button onClick={download}>Fetch</button>\r\n    } else if (isLoaded) {\r\n        return (\r\n            <div className=\"post-list\">\r\n                <input\r\n                    value={inputVal}\r\n                    onChange={handleFilter}\r\n                    type=\"text\"\r\n                    placeholder=\"Type to filter...\"\r\n                    style={{ padding: '3px 8px', width: 200, fontSize: 14 }}\r\n                />\r\n                <br /><br />\r\n                <button onClick={() => window.location.reload()}>Reload</button>\r\n                {filtered.map(post => (\r\n                    <Post\r\n                        key={post.id}\r\n                        postId={post.id}\r\n                        userId={post.userId}\r\n                        title={post.title}\r\n                        body={post.body}\r\n                        inputVal={inputVal}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>Loading post...</div>\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react'\nimport './App.css'\nimport PostList from './components/PostList'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <PostList />\n    </div>\n  )\n}"],"sourceRoot":""}