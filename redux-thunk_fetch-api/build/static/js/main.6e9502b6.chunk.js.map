{"version":3,"sources":["Store.js","ArticleContainer.js","Article.js","App.js","index.js"],"names":["Store","initialState","requested","title","reducer","state","action","type","load","dispatch","fetch","then","response","json","data","display","connect","ownProps","articleRequested","articleTitle","buttonLabel","loadData","onClick","store","createStore","applyMiddleware","thunk","App","ArticleContainer","ReactDOM","render","document","getElementById"],"mappings":"iTAIqBA,E,kCAAAA,EACVC,aAAe,CAClBC,WAAW,EACXC,MAAO,MAHMH,EAMVI,QAAU,WAAyC,IAAxCC,EAAuC,uDAA/BL,EAAMC,aAAcK,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAZC,OAaG,OAAO,eACAF,EADP,CAEIH,WAAW,IAEnB,IAhBI,UAiBA,OAAO,eACAG,EADP,CAEIF,MAAOG,EAAOH,QAEtB,QACI,OAAOE,IAnBFL,EAuBVQ,KAAO,WACV,OAAO,SAACC,GACJA,EAAS,CAAEF,KA7BV,SA8BDG,MA5BI,0EA6BHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIL,EAAST,EAAMe,QAAQD,EAAK,GAAGX,aA5BpCH,EAgCVe,QAAU,SAAAZ,GAAK,MAAK,CACvBI,KApCQ,UAqCRJ,UClCR,IAUea,eAVS,SAACX,EAAOY,GAAR,MAAsB,CAC1CC,iBAAkBb,EAAMH,UACxBiB,aAAcd,EAAMF,MACpBiB,YAAaH,EAASG,gBAGC,SAAAX,GAAQ,MAAK,CACpCY,SAAU,kBAAMZ,EAAST,EAAMQ,YAGpBQ,ECZA,YAA6E,IAA1DE,EAAyD,EAAzDA,iBAAkBC,EAAuC,EAAvCA,aAAcE,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,YACxE,OAAKF,EAGoB,OAAjBC,EACO,2CAEA,6BAAMA,GALV,4BAAQG,QAASD,GAAWD,MCIrCG,EAAQC,YACZxB,EAAMI,QACNqB,YAAgBC,MAWHC,MARf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAACK,EAAD,CAAkBR,YAAY,cCXpCS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6e9502b6.chunk.js","sourcesContent":["const LOAD = 'LOAD'\r\nconst DISPLAY = 'DISPLAY'\r\nconst API_URL = 'http://my-json-server.typicode.com/mate-academy/literary-blog/articles'\r\n\r\nexport default class Store {\r\n    static initialState = {\r\n        requested: false,\r\n        title: null\r\n    }\r\n\r\n    static reducer = (state = Store.initialState, action) => {\r\n        switch (action.type) {\r\n            case LOAD:\r\n                return {\r\n                    ...state,\r\n                    requested: true\r\n                }\r\n            case DISPLAY:\r\n                return {\r\n                    ...state,\r\n                    title: action.title\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    static load = () => {\r\n        return (dispatch) => {\r\n            dispatch({ type: LOAD })\r\n            fetch(API_URL)\r\n            .then(response => response.json())\r\n            .then(data => dispatch(Store.display(data[0].title)))\r\n        }\r\n    }\r\n\r\n    static display = title => ({\r\n        type: DISPLAY,\r\n        title\r\n    })\r\n}","import { connect } from 'react-redux'\r\nimport Store from './Store'\r\nimport Article from './Article'\r\n\r\nconst mapStateToPtops = (state, ownProps) => ({\r\n    articleRequested: state.requested,\r\n    articleTitle: state.title,\r\n    buttonLabel: ownProps.buttonLabel\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadData: () => dispatch(Store.load())\r\n})\r\n\r\nexport default connect(mapStateToPtops, mapDispatchToProps)(Article)\r\n","import React from 'react'\r\n\r\nexport default function Article({ articleRequested, articleTitle, loadData, buttonLabel }) {\r\n    if (!articleRequested) {\r\n        return <button onClick={loadData}>{buttonLabel}</button>\r\n    } else {\r\n        if (articleTitle === null) {\r\n            return <div>Loading...</div>\r\n        } else {\r\n            return <div>{articleTitle}</div>\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport Store from './Store'\nimport ArticleContainer from './ArticleContainer'\n\nconst store = createStore(\n  Store.reducer,\n  applyMiddleware(thunk)\n)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ArticleContainer buttonLabel=\"Request\" />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}